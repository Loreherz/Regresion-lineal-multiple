datos <- read.csv("https://raw.githubusercontent.com/fhernanb/Python-para-estadistica/master/03%20Regression/Regresi%C3%B3n%20lineal%20simple/softdrink.csv", header = T)

names(datos)
head(datos)
str(datos)

datos1<-datos[,-1] # elimina la primera columna 
names(datos1)

# coeficiente de correlación 
cor(datos1$x1,datos1$x2)

round(cor(datos1),3) # Matriz de correlación redondeada a 3 decimales 

plot(datos1) # opcion básica
 pairs(datos1,labels = c("y","x","x2"), main="Matriz de dispersion", cex.main=0.8, cex=1.5,pch=20,
       bg="light blue",cex.labels = 1, font.labels = 1)
 
 # matriz de dispersion con correlaciones 
 
 panel.cor<-function(x1, y, digits=2, prefix ="", cex.cor){
   par(usr=c(0,1,0,1))
   r<-abs(cor(x1,y))
   txt<-format(c(r,0.123456789), digits = digits)[1]
   txt<-paste(prefix,txt, sep="")
   if(missing(cex.cor))
   cex<-0.8/strwidth(txt)
   text(0.5,0.5,txt,cex = cex)
 }

 pairs (datos1, lower.panel = panel.smooth, upper.panel = panel.cor,
        main= "Matriz de dispersion con correlaciones")
 
 
 # Ajustar modelo de regresión 

 mod <- lm(y ~ x1 + x2, data = datos1)

 summary(mod) 
 
 coef(mod)
 mod$coef
 sigma(mod) # varianza estimada
 summary (mod)$sigma^2 
sigma(mod) 
 

# intervalos de confianza para los coeficientes del modelo

confint(mod,conf.level=0.95)

# grafico de dispersion 

# para realizar este grafico se debe descargar la libreria plot3D y plot3Drgl poara elaborar
# un diagrama de dispersión en tres dimensiones

install.packages("plot3D")
install.packages("plot3Drgl")
library(plot3D)
library(plot3Drgl)

grid.lines<-40
x1.pred<-seq(min(datos1$x1),max(datos1$x1), length.out = grid.lines)
x2.pred<-seq(min(datos1$x2),max(datos1$x2), length.out = grid.lines)
x1x2<-expand.grid(x1=x1.pred, x2=x2.pred)
y.pred<-matrix(predict(mod,newdata = x1x2), nrow = grid.lines, ncol = grid.lines)
fitpoint<-predict(mod)
scatter3D(x=datos1$x1, y=datos1$x2, z=datos1$y, theta=30, phi=8, pch=20)


# grafico de dispersion con plano de regresión 

grid.lines<-40
x1.pred<-seq(min(datos1$x1),max(datos1$x1), length.out = grid.lines)
x2.pred<-seq(min(datos1$x2),max(datos1$x2), length.out = grid.lines)
x1x2<-expand.grid(x1=x1.pred, x2=x2.pred)
y.pred<-matrix(predict(mod,newdata = x1x2), nrow = grid.lines, ncol = grid.lines)
fitpoint<-predict(mod)

scatter3D(x=datos1$x1, y=datos1$x2, z=datos1$y, theta=30, phi=8,pch=20, bty="g",
          colkey = TRUE, surf = list(x=x1.pred, y=x2.pred, z=y.pred, fit=fitpoint))

